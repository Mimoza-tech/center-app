{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../booking.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction CreateBookingComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" *Der Name ist zu kurz \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateBookingComponent {\n  constructor(router, activatedRoute, bookingService, formbuilder) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.bookingService = bookingService;\n    this.formbuilder = formbuilder;\n    this.booking = {\n      id: 100,\n      name: \"Your Name\",\n      programNumber: 100,\n      startDate: new Date(),\n      endDate: new Date()\n    };\n    this.bookingForm = this.formbuilder.group({\n      id: ['', Validators.required],\n      name: ['', Validators.compose([Validators.required, Validators.minLength(5)])],\n      programNumber: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    if (this.router.url != '/create') {\n      var id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n      this.bookingService.getBookingById(id).subscribe(result => {\n        this.booking = result;\n        this.bookingForm.setValue(\n        // Formular soll mit Standardwerten ausgefüllt sein\n        {\n          id: this.booking.id,\n          programNumber: this.booking.programNumber,\n          name: this.booking.name,\n          startDate: this.booking.startDate,\n          endDate: this.booking.endDate\n        });\n      });\n    }\n  }\n  save() {\n    this.booking.id = this.bookingForm.get('id')?.value;\n    this.booking.name = this.bookingForm.get('name')?.value;\n    this.booking.programNumber = this.bookingForm.get('programNumber')?.value;\n    this.booking.startDate = this.bookingForm.get('startDate')?.value;\n    this.booking.endDate = this.bookingForm.get('endDate')?.value;\n    this.bookingService.addBooking(this.booking).subscribe();\n    this.router.navigate(['bookings']);\n  }\n  dateChanged(event, isStart) {\n    var val = event.target.value;\n    if (isStart) {\n      this.booking.startDate = new Date(val);\n    } else {\n      this.booking.endDate = new Date(val);\n    }\n  }\n}\nCreateBookingComponent.ɵfac = function CreateBookingComponent_Factory(t) {\n  return new (t || CreateBookingComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.BookingService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nCreateBookingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateBookingComponent,\n  selectors: [[\"app-create-booking\"]],\n  decls: 37,\n  vars: 10,\n  consts: [[1, \"card\", \"bg-secondary\", \"text-white\"], [1, \"card-header\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\"], [1, \"row\", \"mb-2\"], [1, \"col\"], [1, \"form-label\"], [\"type\", \"number\", \"formControlname\", \"ID\", 1, \"form-control\"], [\"type\", \"number\", \"formControlname\", \"Programnumber\", 1, \"form-control\"], [1, \"col-4\"], [\"type\", \"text\", \"formControlname\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"row\"], [\"type\", \"date\", \"formControlName\", \"startDate\", 1, \"form-control\", 3, \"value\", \"input\"], [\"type\", \"date\", \"formControlName\", \"endDate\", 1, \"form-control\", 3, \"value\", \"input\"], [1, \"card-footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"text-danger\"]],\n  template: function CreateBookingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\");\n      i0.ɵɵtext(3, \"Create new Booking\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateBookingComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Programnumber\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"div\", 9)(17, \"label\", 6);\n      i0.ɵɵtext(18, \"Guest Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"div\", 9);\n      i0.ɵɵtemplate(22, CreateBookingComponent_div_22_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"div\", 5)(25, \"label\", 6);\n      i0.ɵɵtext(26, \"Start Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 13);\n      i0.ɵɵlistener(\"input\", function CreateBookingComponent_Template_input_input_27_listener($event) {\n        return ctx.dateChanged($event, true);\n      });\n      i0.ɵɵpipe(28, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 5)(30, \"label\", 6);\n      i0.ɵɵtext(31, \"End Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 14);\n      i0.ɵɵlistener(\"input\", function CreateBookingComponent_Template_input_input_32_listener($event) {\n        return ctx.dateChanged($event, false);\n      });\n      i0.ɵɵpipe(33, \"date\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(34, \"div\", 15)(35, \"button\", 16);\n      i0.ɵɵtext(36, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.bookingForm);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.bookingForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind2(28, 4, ctx.booking.startDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind2(33, 7, ctx.booking.endDate, \"yyyy-MM-dd\"));\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","CreateBookingComponent","constructor","router","activatedRoute","bookingService","formbuilder","id","name","programNumber","startDate","Date","endDate","group","required","compose","minLength","ngOnInit","url","Number","snapshot","paramMap","get","getBookingById","subscribe","result","booking","bookingForm","setValue","save","value","addBooking","navigate","dateChanged","event","isStart","val","target","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/mimozaneziri/Desktop/center-app1/src/app/create-booking/create-booking.component.ts","/Users/mimozaneziri/Desktop/center-app1/src/app/create-booking/create-booking.component.html"],"sourcesContent":["import { Component, OnInit, Type } from '@angular/core';\nimport { Booking } from '../booking';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingService } from '../booking.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-booking',\n  templateUrl: './create-booking.component.html',\n  styleUrls: ['./create-booking.component.css']\n})\nexport class CreateBookingComponent implements OnInit {\n\n  constructor(\n     private router: Router,\n     private activatedRoute: ActivatedRoute,\n     private bookingService:BookingService,\n     private formbuilder : FormBuilder) { }\n\n    booking: Booking = {\n    id: 100,\n    name: \"Your Name\",\n    programNumber: 100,\n    startDate: new Date(),\n    endDate: new Date()\n  }\n\n  bookingForm = this.formbuilder.group({\n    id:[<number><unknown>'', Validators.required],\n    name: [<string>'', Validators.compose([Validators.required, Validators.minLength(5)])],\n    programNumber: [<number><unknown>'', Validators.required],\n    startDate: [<Date><unknown>'', Validators.required],\n    endDate: [<Date><unknown>'', Validators.required]\n  });\n\n  ngOnInit(): void {\n    if(this.router.url != '/create'){\n      var id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n\n      this.bookingService.getBookingById(id).subscribe((result) => {\n\n        this.booking = result;\n\n        this.bookingForm.setValue( // Formular soll mit Standardwerten ausgefüllt sein\n          {\n            id : this.booking.id,\n            programNumber: this.booking.programNumber,\n            name: this.booking.name,\n            startDate: this.booking.startDate,\n            endDate : this.booking.endDate\n          }\n        );\n\n      });\n    }\n  }\n\n  save(): void {\n    this.booking.id = <number><unknown>this.bookingForm.get('id')?.value;\n    this.booking.name = <string> this.bookingForm.get('name')?.value;\n    this.booking.programNumber = <number><unknown>this.bookingForm.get('programNumber')?.value;\n    this.booking.startDate = <Date><unknown>this.bookingForm.get('startDate')?.value;\n    this.booking.endDate = <Date><unknown>this.bookingForm.get('endDate')?.value;\n\n    this.bookingService.addBooking(this.booking).subscribe();\n    this.router.navigate(['bookings']);\n  }\n\n  dateChanged(event: Event, isStart: boolean){\n    var val = (event.target as HTMLInputElement).value;\n\n    if(isStart){\n      this.booking.startDate = new Date(val);\n    } else {\n      this.booking.endDate = new Date(val);\n    }\n  }\n}\n","<div class=\"card bg-secondary text-white\">\n  <div class=\"card-header\">\n      <h5>Create new Booking</h5>\n  </div>\n\n  <form [formGroup]=\"bookingForm\" (ngSubmit)=\"save()\">\n      <div class=\"card-body\">\n              <div class=\"row mb-2\">\n                  <div class=\"col\">\n                      <!--Id-->\n                      <label class=\"form-label\">ID</label>\n                      <input type=\"number\" formControlname=\"ID\" class=\"form-control\" />\n                  </div>\n\n                  <div class=\"col\">\n                      <!--RoomNumber-->\n                      <label class=\"form-label\">Programnumber</label>\n                      <input type=\"number\" formControlname=\"Programnumber\"  class=\"form-control\" />\n                  </div>\n              </div>\n\n              <div class=\"row mb-2\">\n                  <div class=\"col-4\">\n                      <!--Name-->\n                      <label class=\"form-label\">Guest Name</label>\n                      <input type=\"text\" formControlname=\"name\" class=\"form-control\" />\n                  </div>\n              </div>\n\n              <div class=\"row mb-2\">\n                  <div class=\"col-4\">\n                      <div  *ngIf=\"bookingForm.get('name')?.hasError('minlength')\" class=\"text-danger\">\n                          *Der Name ist zu kurz\n                      </div>\n                  </div>\n              </div>\n\n              <div class=\"row\">\n                  <div class=\"col\">\n                      <!--StartDate-->\n                      <label class=\"form-label\">Start Date</label>\n                      <input type=\"date\" formControlName=\"startDate\"  [value]=\"booking.startDate | date:'yyyy-MM-dd'\" (input)=\"dateChanged($event, true)\" class=\"form-control\" />\n                  </div>\n\n                  <div class=\"col\">\n                      <!--EndDate-->\n                      <label class=\"form-label\">End Date</label>\n                      <input type=\"date\" formControlName=\"endDate\" [value]=\"booking.endDate| date:'yyyy-MM-dd'\" (input)=\"dateChanged($event, false)\" class=\"form-control\" />\n                  </div>\n              </div>\n      </div>\n\n      <div class=\"card-footer\">\n          <button   type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </div>\n\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}