{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookingService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.bookingsUrl = \"/api/bookings\";\n  }\n  getBookings() {\n    var response = this.httpClient.get(this.bookingsUrl);\n    return response;\n  }\n  deleteBooking(booking) {\n    var response = this.httpClient.delete(this.bookingsUrl + \"/\" + booking.id);\n    return response;\n  }\n  getBookingById(id) {\n    var response = this.httpClient.get(this.bookingsUrl + \"/\" + id);\n    return response;\n  }\n  addBooking(booking) {\n    var response = this.httpClient.post(this.bookingsUrl, booking);\n    return response;\n  }\n}\nBookingService.ɵfac = function BookingService_Factory(t) {\n  return new (t || BookingService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookingService,\n  factory: BookingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAEzBC,YACUC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAEpB,gBAAW,GAAW,eAAe;EADjC;EAGJC,WAAW;IACT,IAAIC,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,IAAI,CAACC,WAAW,CAAC;IAC/D,OAAOF,QAAQ;EACjB;EACAG,aAAa,CAACC,OAAgB;IAE5B,IAAIJ,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACO,MAAM,CAAU,IAAI,CAACH,WAAW,GAAG,GAAG,GAAGE,OAAO,CAACE,EAAE,CAAC;IACnF,OAAON,QAAQ;EACjB;EACAO,cAAc,CAACD,EAAU;IACvB,IAAIN,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACG,GAAG,CAAU,IAAI,CAACC,WAAW,GAAG,GAAG,GAAGI,EAAE,CAAC;IACxE,OAAON,QAAQ;EACjB;EACAQ,UAAU,CAACJ,OAAe;IACxB,IAAIJ,QAAQ,GAAG,IAAI,CAACF,UAAU,CAACW,IAAI,CAAU,IAAI,CAACP,WAAW,EAACE,OAAO,CAAC;IACtE,OAAOJ,QAAQ;EACjB;;AAvBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;EAAAe,YAFb;AAAM","names":["BookingService","constructor","httpClient","getBookings","response","get","bookingsUrl","deleteBooking","booking","delete","id","getBookingById","addBooking","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/mimozaneziri/Desktop/center-app1/src/app/booking.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Bookings } from './mock-bookings';\nimport { Booking } from './booking';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({ // Sorgt dafür, dass wir diese Klasse BookingService in der Dependency Injections verwenden können in anderen Componenten oder auch anderen Services\n  providedIn: 'root'\n})\nexport class BookingService {\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n  bookingsUrl :string = \"/api/bookings\";\n\n  getBookings() : Observable <Booking[]>{\n    var response = this.httpClient.get<Booking[]>(this.bookingsUrl);\n    return response;\n  }\n  deleteBooking(booking: Booking) : Observable<Booking> {\n\n    var response = this.httpClient.delete<Booking>(this.bookingsUrl + \"/\" + booking.id);\n    return response;\n  }\n  getBookingById(id: number) : Observable<Booking>{\n    var response = this.httpClient.get<Booking>(this.bookingsUrl + \"/\" + id);\n    return response;\n  }\n  addBooking(booking:Booking) : Observable<Booking>{\n    var response = this.httpClient.post<Booking>(this.bookingsUrl,booking);\n    return response;\n  }\n  }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}